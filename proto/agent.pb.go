// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: agent.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 心跳消息
type HeartbeatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentId       string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Metadata      *AgentMetadata         `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	mi := &file_agent_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{0}
}

func (x *HeartbeatRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *HeartbeatRequest) GetMetadata() *AgentMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *HeartbeatRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type HeartbeatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	ServerTime    int64                  `protobuf:"varint,2,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"`
	Config        *ConfigUpdate          `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	mi := &file_agent_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{1}
}

func (x *HeartbeatResponse) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *HeartbeatResponse) GetServerTime() int64 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

func (x *HeartbeatResponse) GetConfig() *ConfigUpdate {
	if x != nil {
		return x.Config
	}
	return nil
}

// Agent元数据
type AgentMetadata struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Hostname           string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Ip                 string                 `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Version            string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Labels             map[string]string      `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Resources          *SystemResources       `protobuf:"bytes,5,opt,name=resources,proto3" json:"resources,omitempty"`
	SupportedTaskTypes []string               `protobuf:"bytes,6,rep,name=supported_task_types,json=supportedTaskTypes,proto3" json:"supported_task_types,omitempty"` // 新增：支持的任务类型
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *AgentMetadata) Reset() {
	*x = AgentMetadata{}
	mi := &file_agent_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentMetadata) ProtoMessage() {}

func (x *AgentMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentMetadata.ProtoReflect.Descriptor instead.
func (*AgentMetadata) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{2}
}

func (x *AgentMetadata) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *AgentMetadata) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *AgentMetadata) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AgentMetadata) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *AgentMetadata) GetResources() *SystemResources {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *AgentMetadata) GetSupportedTaskTypes() []string {
	if x != nil {
		return x.SupportedTaskTypes
	}
	return nil
}

// 系统资源信息
type SystemResources struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CpuUsage      float64                `protobuf:"fixed64,1,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	MemoryUsage   float64                `protobuf:"fixed64,2,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`
	DiskUsage     float64                `protobuf:"fixed64,3,opt,name=disk_usage,json=diskUsage,proto3" json:"disk_usage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemResources) Reset() {
	*x = SystemResources{}
	mi := &file_agent_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemResources) ProtoMessage() {}

func (x *SystemResources) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemResources.ProtoReflect.Descriptor instead.
func (*SystemResources) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{3}
}

func (x *SystemResources) GetCpuUsage() float64 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *SystemResources) GetMemoryUsage() float64 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

func (x *SystemResources) GetDiskUsage() float64 {
	if x != nil {
		return x.DiskUsage
	}
	return 0
}

// 配置更新
type ConfigUpdate struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	HeartbeatInterval int32                  `protobuf:"varint,1,opt,name=heartbeat_interval,json=heartbeatInterval,proto3" json:"heartbeat_interval,omitempty"`
	Settings          map[string]string      `protobuf:"bytes,2,rep,name=settings,proto3" json:"settings,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ConfigUpdate) Reset() {
	*x = ConfigUpdate{}
	mi := &file_agent_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigUpdate) ProtoMessage() {}

func (x *ConfigUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigUpdate.ProtoReflect.Descriptor instead.
func (*ConfigUpdate) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{4}
}

func (x *ConfigUpdate) GetHeartbeatInterval() int32 {
	if x != nil {
		return x.HeartbeatInterval
	}
	return 0
}

func (x *ConfigUpdate) GetSettings() map[string]string {
	if x != nil {
		return x.Settings
	}
	return nil
}

// 任务定义
type Task struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TaskId         string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	TaskType       string                 `protobuf:"bytes,2,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`
	CreateTime     int64                  `protobuf:"varint,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	ExpireTime     int64                  `protobuf:"varint,4,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	Parameters     *TaskParameters        `protobuf:"bytes,5,opt,name=parameters,proto3" json:"parameters,omitempty"`
	Schedule       *TaskSchedule          `protobuf:"bytes,6,opt,name=schedule,proto3" json:"schedule,omitempty"`
	TimeoutSeconds int32                  `protobuf:"varint,7,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	RetryCount     int32                  `protobuf:"varint,8,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`
	Criticality    string                 `protobuf:"bytes,9,opt,name=criticality,proto3" json:"criticality,omitempty"` // HIGH, MEDIUM, LOW
	Priority       int32                  `protobuf:"varint,10,opt,name=priority,proto3" json:"priority,omitempty"`     // 优先级字段，1-10
	MaxRetries     int32                  `protobuf:"varint,11,opt,name=max_retries,json=maxRetries,proto3" json:"max_retries,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_agent_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{5}
}

func (x *Task) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *Task) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *Task) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Task) GetExpireTime() int64 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

func (x *Task) GetParameters() *TaskParameters {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *Task) GetSchedule() *TaskSchedule {
	if x != nil {
		return x.Schedule
	}
	return nil
}

func (x *Task) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *Task) GetRetryCount() int32 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

func (x *Task) GetCriticality() string {
	if x != nil {
		return x.Criticality
	}
	return ""
}

func (x *Task) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *Task) GetMaxRetries() int32 {
	if x != nil {
		return x.MaxRetries
	}
	return 0
}

// 任务参数
type TaskParameters struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Params        map[string]string      `protobuf:"bytes,1,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Secrets       []*EncryptedSecret     `protobuf:"bytes,2,rep,name=secrets,proto3" json:"secrets,omitempty"`
	BinaryData    []byte                 `protobuf:"bytes,3,opt,name=binary_data,json=binaryData,proto3" json:"binary_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskParameters) Reset() {
	*x = TaskParameters{}
	mi := &file_agent_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskParameters) ProtoMessage() {}

func (x *TaskParameters) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskParameters.ProtoReflect.Descriptor instead.
func (*TaskParameters) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{6}
}

func (x *TaskParameters) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *TaskParameters) GetSecrets() []*EncryptedSecret {
	if x != nil {
		return x.Secrets
	}
	return nil
}

func (x *TaskParameters) GetBinaryData() []byte {
	if x != nil {
		return x.BinaryData
	}
	return nil
}

// 加密的敏感信息
type EncryptedSecret struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	KeyId            string                 `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	EncryptedData    []byte                 `protobuf:"bytes,2,opt,name=encrypted_data,json=encryptedData,proto3" json:"encrypted_data,omitempty"`
	EncryptionMethod string                 `protobuf:"bytes,3,opt,name=encryption_method,json=encryptionMethod,proto3" json:"encryption_method,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *EncryptedSecret) Reset() {
	*x = EncryptedSecret{}
	mi := &file_agent_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncryptedSecret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptedSecret) ProtoMessage() {}

func (x *EncryptedSecret) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptedSecret.ProtoReflect.Descriptor instead.
func (*EncryptedSecret) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{7}
}

func (x *EncryptedSecret) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *EncryptedSecret) GetEncryptedData() []byte {
	if x != nil {
		return x.EncryptedData
	}
	return nil
}

func (x *EncryptedSecret) GetEncryptionMethod() string {
	if x != nil {
		return x.EncryptionMethod
	}
	return ""
}

// 任务调度设置
type TaskSchedule struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ScheduleType    string                 `protobuf:"bytes,1,opt,name=schedule_type,json=scheduleType,proto3" json:"schedule_type,omitempty"` // IMMEDIATE, CRON, INTERVAL
	CronExpression  string                 `protobuf:"bytes,2,opt,name=cron_expression,json=cronExpression,proto3" json:"cron_expression,omitempty"`
	IntervalSeconds int32                  `protobuf:"varint,3,opt,name=interval_seconds,json=intervalSeconds,proto3" json:"interval_seconds,omitempty"`
	ScheduledAt     int64                  `protobuf:"varint,4,opt,name=scheduled_at,json=scheduledAt,proto3" json:"scheduled_at,omitempty"` // 支持单次调度时间
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TaskSchedule) Reset() {
	*x = TaskSchedule{}
	mi := &file_agent_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskSchedule) ProtoMessage() {}

func (x *TaskSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskSchedule.ProtoReflect.Descriptor instead.
func (*TaskSchedule) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{8}
}

func (x *TaskSchedule) GetScheduleType() string {
	if x != nil {
		return x.ScheduleType
	}
	return ""
}

func (x *TaskSchedule) GetCronExpression() string {
	if x != nil {
		return x.CronExpression
	}
	return ""
}

func (x *TaskSchedule) GetIntervalSeconds() int32 {
	if x != nil {
		return x.IntervalSeconds
	}
	return 0
}

func (x *TaskSchedule) GetScheduledAt() int64 {
	if x != nil {
		return x.ScheduledAt
	}
	return 0
}

// 任务状态更新
type TaskStatusUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`      // PENDING, RUNNING, COMPLETED, FAILED, CANCELLED
	Progress      int32                  `protobuf:"varint,3,opt,name=progress,proto3" json:"progress,omitempty"` // 0-100
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Result        []byte                 `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
	Error         *ErrorInfo             `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
	UpdateTime    int64                  `protobuf:"varint,7,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskStatusUpdate) Reset() {
	*x = TaskStatusUpdate{}
	mi := &file_agent_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskStatusUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskStatusUpdate) ProtoMessage() {}

func (x *TaskStatusUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskStatusUpdate.ProtoReflect.Descriptor instead.
func (*TaskStatusUpdate) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{9}
}

func (x *TaskStatusUpdate) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskStatusUpdate) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TaskStatusUpdate) GetProgress() int32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *TaskStatusUpdate) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TaskStatusUpdate) GetResult() []byte {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *TaskStatusUpdate) GetError() *ErrorInfo {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *TaskStatusUpdate) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

// 错误信息
type ErrorInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrorCode     string                 `protobuf:"bytes,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	StackTrace    string                 `protobuf:"bytes,3,opt,name=stack_trace,json=stackTrace,proto3" json:"stack_trace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorInfo) Reset() {
	*x = ErrorInfo{}
	mi := &file_agent_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorInfo) ProtoMessage() {}

func (x *ErrorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorInfo.ProtoReflect.Descriptor instead.
func (*ErrorInfo) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{10}
}

func (x *ErrorInfo) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *ErrorInfo) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ErrorInfo) GetStackTrace() string {
	if x != nil {
		return x.StackTrace
	}
	return ""
}

// 注册请求
type RegisterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentId       string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Metadata      *AgentMetadata         `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	PublicKey     []byte                 `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	mi := &file_agent_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{11}
}

func (x *RegisterRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *RegisterRequest) GetMetadata() *AgentMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *RegisterRequest) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

// 注册响应
type RegisterResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Status          string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	ServerId        string                 `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	ServerPublicKey []byte                 `protobuf:"bytes,3,opt,name=server_public_key,json=serverPublicKey,proto3" json:"server_public_key,omitempty"`
	ApiToken        string                 `protobuf:"bytes,4,opt,name=api_token,json=apiToken,proto3" json:"api_token,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RegisterResponse) Reset() {
	*x = RegisterResponse{}
	mi := &file_agent_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResponse) ProtoMessage() {}

func (x *RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResponse.ProtoReflect.Descriptor instead.
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{12}
}

func (x *RegisterResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RegisterResponse) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *RegisterResponse) GetServerPublicKey() []byte {
	if x != nil {
		return x.ServerPublicKey
	}
	return nil
}

func (x *RegisterResponse) GetApiToken() string {
	if x != nil {
		return x.ApiToken
	}
	return ""
}

// 任务请求
type TaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	AgentId       string                 `protobuf:"bytes,2,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskRequest) Reset() {
	*x = TaskRequest{}
	mi := &file_agent_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskRequest) ProtoMessage() {}

func (x *TaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskRequest.ProtoReflect.Descriptor instead.
func (*TaskRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{13}
}

func (x *TaskRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

// 状态响应
type StatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	mi := &file_agent_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{14}
}

func (x *StatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *StatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_agent_proto protoreflect.FileDescriptor

const file_agent_proto_rawDesc = "" +
	"\n" +
	"\vagent.proto\x12\x05proto\"}\n" +
	"\x10HeartbeatRequest\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x120\n" +
	"\bmetadata\x18\x02 \x01(\v2\x14.proto.AgentMetadataR\bmetadata\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\"~\n" +
	"\x11HeartbeatResponse\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x1f\n" +
	"\vserver_time\x18\x02 \x01(\x03R\n" +
	"serverTime\x12+\n" +
	"\x06config\x18\x03 \x01(\v2\x13.proto.ConfigUpdateR\x06config\"\xb2\x02\n" +
	"\rAgentMetadata\x12\x1a\n" +
	"\bhostname\x18\x01 \x01(\tR\bhostname\x12\x0e\n" +
	"\x02ip\x18\x02 \x01(\tR\x02ip\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x128\n" +
	"\x06labels\x18\x04 \x03(\v2 .proto.AgentMetadata.LabelsEntryR\x06labels\x124\n" +
	"\tresources\x18\x05 \x01(\v2\x16.proto.SystemResourcesR\tresources\x120\n" +
	"\x14supported_task_types\x18\x06 \x03(\tR\x12supportedTaskTypes\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"p\n" +
	"\x0fSystemResources\x12\x1b\n" +
	"\tcpu_usage\x18\x01 \x01(\x01R\bcpuUsage\x12!\n" +
	"\fmemory_usage\x18\x02 \x01(\x01R\vmemoryUsage\x12\x1d\n" +
	"\n" +
	"disk_usage\x18\x03 \x01(\x01R\tdiskUsage\"\xb9\x01\n" +
	"\fConfigUpdate\x12-\n" +
	"\x12heartbeat_interval\x18\x01 \x01(\x05R\x11heartbeatInterval\x12=\n" +
	"\bsettings\x18\x02 \x03(\v2!.proto.ConfigUpdate.SettingsEntryR\bsettings\x1a;\n" +
	"\rSettingsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8f\x03\n" +
	"\x04Task\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x1b\n" +
	"\ttask_type\x18\x02 \x01(\tR\btaskType\x12\x1f\n" +
	"\vcreate_time\x18\x03 \x01(\x03R\n" +
	"createTime\x12\x1f\n" +
	"\vexpire_time\x18\x04 \x01(\x03R\n" +
	"expireTime\x125\n" +
	"\n" +
	"parameters\x18\x05 \x01(\v2\x15.proto.TaskParametersR\n" +
	"parameters\x12/\n" +
	"\bschedule\x18\x06 \x01(\v2\x13.proto.TaskScheduleR\bschedule\x12'\n" +
	"\x0ftimeout_seconds\x18\a \x01(\x05R\x0etimeoutSeconds\x12\x1f\n" +
	"\vretry_count\x18\b \x01(\x05R\n" +
	"retryCount\x12 \n" +
	"\vcriticality\x18\t \x01(\tR\vcriticality\x12\x1a\n" +
	"\bpriority\x18\n" +
	" \x01(\x05R\bpriority\x12\x1f\n" +
	"\vmax_retries\x18\v \x01(\x05R\n" +
	"maxRetries\"\xd9\x01\n" +
	"\x0eTaskParameters\x129\n" +
	"\x06params\x18\x01 \x03(\v2!.proto.TaskParameters.ParamsEntryR\x06params\x120\n" +
	"\asecrets\x18\x02 \x03(\v2\x16.proto.EncryptedSecretR\asecrets\x12\x1f\n" +
	"\vbinary_data\x18\x03 \x01(\fR\n" +
	"binaryData\x1a9\n" +
	"\vParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"|\n" +
	"\x0fEncryptedSecret\x12\x15\n" +
	"\x06key_id\x18\x01 \x01(\tR\x05keyId\x12%\n" +
	"\x0eencrypted_data\x18\x02 \x01(\fR\rencryptedData\x12+\n" +
	"\x11encryption_method\x18\x03 \x01(\tR\x10encryptionMethod\"\xaa\x01\n" +
	"\fTaskSchedule\x12#\n" +
	"\rschedule_type\x18\x01 \x01(\tR\fscheduleType\x12'\n" +
	"\x0fcron_expression\x18\x02 \x01(\tR\x0ecronExpression\x12)\n" +
	"\x10interval_seconds\x18\x03 \x01(\x05R\x0fintervalSeconds\x12!\n" +
	"\fscheduled_at\x18\x04 \x01(\x03R\vscheduledAt\"\xda\x01\n" +
	"\x10TaskStatusUpdate\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x1a\n" +
	"\bprogress\x18\x03 \x01(\x05R\bprogress\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12\x16\n" +
	"\x06result\x18\x05 \x01(\fR\x06result\x12&\n" +
	"\x05error\x18\x06 \x01(\v2\x10.proto.ErrorInfoR\x05error\x12\x1f\n" +
	"\vupdate_time\x18\a \x01(\x03R\n" +
	"updateTime\"p\n" +
	"\tErrorInfo\x12\x1d\n" +
	"\n" +
	"error_code\x18\x01 \x01(\tR\terrorCode\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\x12\x1f\n" +
	"\vstack_trace\x18\x03 \x01(\tR\n" +
	"stackTrace\"}\n" +
	"\x0fRegisterRequest\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x120\n" +
	"\bmetadata\x18\x02 \x01(\v2\x14.proto.AgentMetadataR\bmetadata\x12\x1d\n" +
	"\n" +
	"public_key\x18\x03 \x01(\fR\tpublicKey\"\x90\x01\n" +
	"\x10RegisterResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x1b\n" +
	"\tserver_id\x18\x02 \x01(\tR\bserverId\x12*\n" +
	"\x11server_public_key\x18\x03 \x01(\fR\x0fserverPublicKey\x12\x1b\n" +
	"\tapi_token\x18\x04 \x01(\tR\bapiToken\"A\n" +
	"\vTaskRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x19\n" +
	"\bagent_id\x18\x02 \x01(\tR\aagentId\"B\n" +
	"\x0eStatusResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2\xb8\x02\n" +
	"\fAgentService\x12>\n" +
	"\tHeartbeat\x12\x17.proto.HeartbeatRequest\x1a\x18.proto.HeartbeatResponse\x126\n" +
	"\n" +
	"TaskStream\x12\x17.proto.TaskStatusUpdate\x1a\v.proto.Task(\x010\x01\x12@\n" +
	"\rRegisterAgent\x12\x16.proto.RegisterRequest\x1a\x17.proto.RegisterResponse\x12*\n" +
	"\aGetTask\x12\x12.proto.TaskRequest\x1a\v.proto.Task\x12B\n" +
	"\x10UpdateTaskStatus\x12\x17.proto.TaskStatusUpdate\x1a\x15.proto.StatusResponseB-Z+github.com/songzhibin97/nexlify/proto;protob\x06proto3"

var (
	file_agent_proto_rawDescOnce sync.Once
	file_agent_proto_rawDescData []byte
)

func file_agent_proto_rawDescGZIP() []byte {
	file_agent_proto_rawDescOnce.Do(func() {
		file_agent_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_agent_proto_rawDesc), len(file_agent_proto_rawDesc)))
	})
	return file_agent_proto_rawDescData
}

var file_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_agent_proto_goTypes = []any{
	(*HeartbeatRequest)(nil),  // 0: proto.HeartbeatRequest
	(*HeartbeatResponse)(nil), // 1: proto.HeartbeatResponse
	(*AgentMetadata)(nil),     // 2: proto.AgentMetadata
	(*SystemResources)(nil),   // 3: proto.SystemResources
	(*ConfigUpdate)(nil),      // 4: proto.ConfigUpdate
	(*Task)(nil),              // 5: proto.Task
	(*TaskParameters)(nil),    // 6: proto.TaskParameters
	(*EncryptedSecret)(nil),   // 7: proto.EncryptedSecret
	(*TaskSchedule)(nil),      // 8: proto.TaskSchedule
	(*TaskStatusUpdate)(nil),  // 9: proto.TaskStatusUpdate
	(*ErrorInfo)(nil),         // 10: proto.ErrorInfo
	(*RegisterRequest)(nil),   // 11: proto.RegisterRequest
	(*RegisterResponse)(nil),  // 12: proto.RegisterResponse
	(*TaskRequest)(nil),       // 13: proto.TaskRequest
	(*StatusResponse)(nil),    // 14: proto.StatusResponse
	nil,                       // 15: proto.AgentMetadata.LabelsEntry
	nil,                       // 16: proto.ConfigUpdate.SettingsEntry
	nil,                       // 17: proto.TaskParameters.ParamsEntry
}
var file_agent_proto_depIdxs = []int32{
	2,  // 0: proto.HeartbeatRequest.metadata:type_name -> proto.AgentMetadata
	4,  // 1: proto.HeartbeatResponse.config:type_name -> proto.ConfigUpdate
	15, // 2: proto.AgentMetadata.labels:type_name -> proto.AgentMetadata.LabelsEntry
	3,  // 3: proto.AgentMetadata.resources:type_name -> proto.SystemResources
	16, // 4: proto.ConfigUpdate.settings:type_name -> proto.ConfigUpdate.SettingsEntry
	6,  // 5: proto.Task.parameters:type_name -> proto.TaskParameters
	8,  // 6: proto.Task.schedule:type_name -> proto.TaskSchedule
	17, // 7: proto.TaskParameters.params:type_name -> proto.TaskParameters.ParamsEntry
	7,  // 8: proto.TaskParameters.secrets:type_name -> proto.EncryptedSecret
	10, // 9: proto.TaskStatusUpdate.error:type_name -> proto.ErrorInfo
	2,  // 10: proto.RegisterRequest.metadata:type_name -> proto.AgentMetadata
	0,  // 11: proto.AgentService.Heartbeat:input_type -> proto.HeartbeatRequest
	9,  // 12: proto.AgentService.TaskStream:input_type -> proto.TaskStatusUpdate
	11, // 13: proto.AgentService.RegisterAgent:input_type -> proto.RegisterRequest
	13, // 14: proto.AgentService.GetTask:input_type -> proto.TaskRequest
	9,  // 15: proto.AgentService.UpdateTaskStatus:input_type -> proto.TaskStatusUpdate
	1,  // 16: proto.AgentService.Heartbeat:output_type -> proto.HeartbeatResponse
	5,  // 17: proto.AgentService.TaskStream:output_type -> proto.Task
	12, // 18: proto.AgentService.RegisterAgent:output_type -> proto.RegisterResponse
	5,  // 19: proto.AgentService.GetTask:output_type -> proto.Task
	14, // 20: proto.AgentService.UpdateTaskStatus:output_type -> proto.StatusResponse
	16, // [16:21] is the sub-list for method output_type
	11, // [11:16] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_agent_proto_init() }
func file_agent_proto_init() {
	if File_agent_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_agent_proto_rawDesc), len(file_agent_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_agent_proto_goTypes,
		DependencyIndexes: file_agent_proto_depIdxs,
		MessageInfos:      file_agent_proto_msgTypes,
	}.Build()
	File_agent_proto = out.File
	file_agent_proto_goTypes = nil
	file_agent_proto_depIdxs = nil
}
